/**
 * GameUI - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º UI –ø–ª–µ–π–±–ª–∞
 */

import { ConfettiEffect } from './confetti';
import { GameSounds } from './sounds';
// @ts-ignore
import logoUrl from '@/assets/logo.png?url';

export type UIScreen = 'start' | 'playing' | 'modal-traffic' | 'modal-roadwork' | 'endcard' | 'fade';

export interface GameUICallbacks {
  onRouteSelect: (route: 'left' | 'straight' | 'right') => void;
  onRetry: () => void;
  onCTA: () => void;
}

export class GameUI {
  private container: HTMLElement;
  private callbacks: GameUICallbacks;
  // currentScreen —É–¥–∞–ª–µ–Ω - –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

  // UI —ç–ª–µ–º–µ–Ω—Ç—ã
  private startScreen?: HTMLElement;
  private routeButtons?: HTMLElement;
  private modalTraffic?: HTMLElement;
  private modalRoadwork?: HTMLElement;
  private endcard?: HTMLElement;
  private fadeOverlay?: HTMLElement;

  // –≠—Ñ—Ñ–µ–∫—Ç—ã –∏ –∑–≤—É–∫–∏
  private confetti?: ConfettiEffect;
  private sounds: GameSounds;

  constructor(container: HTMLElement, callbacks: GameUICallbacks) {
    this.container = container;
    this.callbacks = callbacks;
    this.sounds = new GameSounds();
    this.init();
  }

  private init(): void {
    this.createStartScreen();
    this.createModals();
    this.createEndcard();
    this.createFadeOverlay();
  }

  /**
   * –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ 3 –∫–Ω–æ–ø–∫–∞–º–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
   */
  private createStartScreen(): void {
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    this.startScreen = document.createElement('div');
    this.startScreen.className = 'ui-start-screen';
    this.startScreen.innerHTML = `
      <div class="ui-header">
        <div class="ui-logo-container">
          <img src="${logoUrl}" alt="2–ì–ò–°" class="ui-logo" />
        </div>
        <h1 class="ui-title">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç<br>–±–µ–∑ —Å—é—Ä–ø—Ä–∏–∑–æ–≤</h1>
      </div>
    `;

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    this.routeButtons = document.createElement('div');
    this.routeButtons.className = 'ui-route-buttons';
    this.routeButtons.innerHTML = `
      <button class="ui-route-btn ui-route-btn-left" data-route="left">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M15 19L8 12L15 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <span>–ù–∞–ª–µ–≤–æ</span>
      </button>
      <button class="ui-route-btn ui-route-btn-straight" data-route="straight">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M12 5L12 19M12 5L8 9M12 5L16 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <span>–ü—Ä—è–º–æ</span>
      </button>
      <button class="ui-route-btn ui-route-btn-right" data-route="right">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M9 5L16 12L9 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <span>–ù–∞–ø—Ä–∞–≤–æ</span>
      </button>
    `;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
    const buttons = this.routeButtons.querySelectorAll('.ui-route-btn');
    buttons.forEach(btn => {
      btn.addEventListener('click', (e) => {
        const route = (e.currentTarget as HTMLElement).dataset.route as 'left' | 'straight' | 'right';
        this.onRouteButtonClick(route);
      });
    });

    this.container.appendChild(this.startScreen);
    this.container.appendChild(this.routeButtons);
  }

  /**
   * –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –Ω–µ—É–¥–∞—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
   */
  private createModals(): void {
    // –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è –ø—Ä–æ–±–∫–∏ (–ª–µ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç)
    this.modalTraffic = document.createElement('div');
    this.modalTraffic.className = 'ui-modal ui-modal-hidden';
    this.modalTraffic.innerHTML = `
      <div class="ui-modal-content">
        <div class="ui-modal-icon">üöó</div>
        <h2 class="ui-modal-title">–í–ø–µ—Ä–µ–¥–∏ –ø—Ä–æ–±–∫–∞!</h2>
        <p class="ui-modal-text">–ù–∞ —ç—Ç–æ–º –º–∞—Ä—à—Ä—É—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞–ª–∞—Å—å –ø—Ä–æ–±–∫–∞. 2–ì–ò–° –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª –±—ã –≤–∞—Å –∑–∞—Ä–∞–Ω–µ–µ!</p>
      </div>
    `;

    // –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç (–ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç)
    this.modalRoadwork = document.createElement('div');
    this.modalRoadwork.className = 'ui-modal ui-modal-hidden';
    this.modalRoadwork.innerHTML = `
      <div class="ui-modal-content">
        <div class="ui-modal-icon">üöß</div>
        <h2 class="ui-modal-title">–í–µ–¥—É—Ç—Å—è —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã</h2>
        <p class="ui-modal-text">–î–æ—Ä–æ–≥–∞ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∞. –° 2–ì–ò–° –≤—ã –∑–Ω–∞–ª–∏ –±—ã –æ–± —ç—Ç–æ–º –∑–∞—Ä–∞–Ω–µ–µ –∏ –≤—ã–±—Ä–∞–ª–∏ –¥—Ä—É–≥–æ–π –ø—É—Ç—å!</p>
      </div>
    `;

    this.container.appendChild(this.modalTraffic);
    this.container.appendChild(this.modalRoadwork);
  }

  /**
   * End-card —Å CTA –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
   */
  private createEndcard(): void {
    this.endcard = document.createElement('div');
    this.endcard.className = 'ui-endcard ui-endcard-hidden';
    this.endcard.innerHTML = `
      <div class="ui-endcard-content">
        <div class="ui-endcard-logo">
          <img src="${logoUrl}" alt="2–ì–ò–°" class="ui-endcard-logo-img" />
        </div>
        <h2 class="ui-endcard-title">–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!</h2>
        <p class="ui-endcard-text">–í 2–ì–ò–° –≤—ã –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥—ë—Ç–µ –º–∞—Ä—à—Ä—É—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π</p>
        <button class="ui-cta-button">
          –°–∫–∞—á–∞—Ç—å 2–ì–ò–°
        </button>
      </div>
    `;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ CTA
    const ctaButton = this.endcard.querySelector('.ui-cta-button');
    ctaButton?.addEventListener('click', () => {
      this.callbacks.onCTA();
    });

    this.container.appendChild(this.endcard);
  }

  /**
   * –ë–µ–ª—ã–π fade-—ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
   */
  private createFadeOverlay(): void {
    this.fadeOverlay = document.createElement('div');
    this.fadeOverlay.className = 'ui-fade-overlay';
    this.container.appendChild(this.fadeOverlay);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç–∞
   */
  private onRouteButtonClick(route: 'left' | 'straight' | 'right'): void {
    this.sounds.playClick();
    this.hideStartScreen();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–≤—É–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è
    this.sounds.startCarEngine();
    
    this.callbacks.onRouteSelect(route);
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–≤—É–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è (–ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥)
   */
  public stopCarEngine(): void {
    this.sounds.stopCarEngine();
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
   */
  public showStartScreen(): void {
    this.startScreen?.classList.remove('ui-hidden');
    this.routeButtons?.classList.remove('ui-hidden');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
      this.startScreen?.classList.add('ui-visible');
      this.routeButtons?.classList.add('ui-visible');
    });
  }

  /**
   * –°–∫—Ä—ã—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
   */
  public hideStartScreen(): void {
    this.startScreen?.classList.remove('ui-visible');
    this.routeButtons?.classList.remove('ui-visible');
    
    setTimeout(() => {
      this.startScreen?.classList.add('ui-hidden');
      this.routeButtons?.classList.add('ui-hidden');
    }, 300);
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É —Å –ø—Ä–æ–±–∫–æ–π
   */
  public showTrafficModal(): void {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è
    this.sounds.stopCarEngine();
    
    // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–∞
    this.sounds.playDefeat();
    
    this.modalTraffic?.classList.remove('ui-modal-hidden');
    requestAnimationFrame(() => {
      this.modalTraffic?.classList.add('ui-modal-visible');
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 2.5 —Å–µ–∫—É–Ω–¥—ã –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
    setTimeout(() => {
      this.hideModal(() => {
        this.playFadeAndRestart();
      });
    }, 2500);
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É —Å —Ä–µ–º–æ–Ω—Ç–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏
   */
  public showRoadworkModal(): void {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è
    this.sounds.stopCarEngine();
    
    // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–∞
    this.sounds.playDefeat();
    
    this.modalRoadwork?.classList.remove('ui-modal-hidden');
    requestAnimationFrame(() => {
      this.modalRoadwork?.classList.add('ui-modal-visible');
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 2.5 —Å–µ–∫—É–Ω–¥—ã –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
    setTimeout(() => {
      this.hideModal(() => {
        this.playFadeAndRestart();
      });
    }, 2500);
  }

  /**
   * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
   */
  private hideModal(callback?: () => void): void {
    this.modalTraffic?.classList.remove('ui-modal-visible');
    this.modalRoadwork?.classList.remove('ui-modal-visible');
    
    setTimeout(() => {
      this.modalTraffic?.classList.add('ui-modal-hidden');
      this.modalRoadwork?.classList.add('ui-modal-hidden');
      if (callback) callback();
    }, 300);
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å end-card
   */
  public showEndcard(): void {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è
    this.sounds.stopCarEngine();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    this.confetti = new ConfettiEffect();
    this.confetti.start(this.container);
    
    // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –ø–æ–±–µ–¥—ã
    this.sounds.playVictory();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º end-card —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(() => {
      this.endcard?.classList.remove('ui-endcard-hidden');
      requestAnimationFrame(() => {
        this.endcard?.classList.add('ui-endcard-visible');
      });
    }, 200);
  }

  /**
   * –ë–µ–ª—ã–π fade-—ç—Ñ—Ñ–µ–∫—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
   */
  private playFadeAndRestart(): void {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–µ–ª—ã–π —ç–∫—Ä–∞–Ω
    this.fadeOverlay?.classList.add('ui-fade-active');
    
    // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –≤—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ —É–±–∏—Ä–∞–µ–º fade
    setTimeout(() => {
      this.callbacks.onRetry();
      this.fadeOverlay?.classList.remove('ui-fade-active');
      this.showStartScreen();
    }, 1000);
  }

  /**
   * –°–±—Ä–æ—Å–∏—Ç—å UI
   */
  public reset(): void {
    this.hideStartScreen();
    this.hideModal();
    this.endcard?.classList.remove('ui-endcard-visible');
    this.endcard?.classList.add('ui-endcard-hidden');
    this.fadeOverlay?.classList.remove('ui-fade-active');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ
    if (this.confetti) {
      this.confetti.stop();
      this.confetti = undefined;
    }
  }
}

